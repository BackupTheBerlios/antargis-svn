require File.join(File.split(__FILE__)[0],'rookey','tasks.rb')

$rspec=Rookey.checkedRequire('spec/rake/spectask')

# basic version

inits=[
  "external",
  "basic",
  "math",
  "video",
  "sound",
  "gui",
  "3dengine",
  "game"
      ].map{|f|"AG_Init_libantargis"+f}
lib=Rookey::ruby_ext("antargis",Dir["ext/*/*.cc"]+Dir["ext/*/*.c"]+Dir["ext/*/*.h"]+Dir["ext/*/templates.i"],inits)

ts=Rookey::compile(Dir["main/starter.cc"])
main=Rookey::link_exe("antargis",ts)


task :default=>[lib,main] do
  puts "Done."
end


alias :oldSystem :system
def system(cmd)
  #puts Dir.pwd
  if cmd=~/ruby .*/
    cmd=cmd.gsub(/^ruby/,"./antargis")
  end
  #puts cmd
  oldSystem(cmd)
end

if $rspec 
  # rspec
  Spec::Rake::SpecTask.new(:spec=>:default) do |t|
    t.spec_files = FileList['ruby/**/spec_*.rb'].map{|f|File.expand_path(f)}
    t.warning = true
    t.rcov = true
    path="spec_output.html"
    if ENV['CC_BUILD_ARTIFACTS']
      path=File.join(ENV['CC_BUILD_ARTIFACTS'],path)
    end
    t.spec_opts=["--format html:"+File.expand_path(path)]
  end
end

desc "Task for cruisecontrol.rb"
  task :cruise => [:clean,:spec] do
end


namespace :spec do
  spec_cmd = (RUBY_PLATFORM =~ /java/) ? "jruby -S spec" : "./antargis /usr/bin/spec"
  task :showall do
    puts Dir["ruby/**/spec_*.rb"].select{|f|not f=~/spec_helper.rb/}.join("\n")
  end
  rule /^spec:/ do |t|
    arguments = t.name.split(':')
    
    file_name = arguments[1]
    spec_name = arguments[2..-1]

    spec_filename = "spec_#{file_name}.rb"
    specs = Dir["ruby/**/#{spec_filename}"]
    #pp specs
    
    if path = specs.detect { |f| spec_filename == File.basename(f) }
      run_file_name = path
    else
      puts "No specs found for #{t.name.inspect}"
      exit
    end

    example = " -e '#{spec_name}'" unless spec_name.empty?
    
    sh "#{spec_cmd} #{run_file_name} --format html:spec_output.html --colour #{example}"
  end
end
