$: << "rookey/lib"
require 'rookey.rb'

$rspec=Rookey.checkedRequire('spec/rake/spectask')

require 'rake/rdoctask.rb'

# basic version

inits=[
  "external",
  "basic",
  "math",
  "video",
  "sound",
  "gui",
  "3dengine",
  "game"
      ].map{|f|"AG_Init_libantargis"+f}
lib=Rookey::ruby_ext("antargis",Dir["ext/*/*.cc"]+Dir["ext/*/*.c"]+Dir["ext/*/*.h"]+Dir["ext/*/templates.i"],inits)
ts=Rookey::compile(Dir["main/starter.cc"])
main=Rookey::link_exe("antargis",ts)

task :default=>[lib,main] do
  puts "Done."
end

$specDebugging=false

def callWithGdb(call)
  args=call.split(" ")
  c,*as=args
  c="gdb #{c}"
  cs=[
    "set args #{as.join(" ")}",
    "r",
    "bt"
  ]
  f=IO.popen(c,"w")
  cs.each{|cm|
    puts cm
    f.puts cm}
  f.close
end


alias :oldSystem :system
def system(cmd)
  #puts Dir.pwd
  pathRe="[0-9A-Za-z\.\/]*ruby"
  if cmd=~/#{pathRe} .*spec/
    antExe=File.expand_path('../antargis',__FILE__)
    p antExe
    cmd=cmd.gsub(/^#{pathRe}/,antExe)
    return callWithGdb(cmd) if $specDebugging==true
    puts "CMD:",cmd
  end
  oldSystem(cmd)
end

if $rspec

  def speccing(t)
    $specDebugging=false #if t.name.keys[0]!=:spec
    t.spec_files = FileList['ruby/**/spec_*.rb'].map{|f|File.expand_path(f)}
    t.warning = true
    t.rcov = true
    path="spec_output.html"
    if ENV['CC_BUILD_ARTIFACTS']
      path=File.join(ENV['CC_BUILD_ARTIFACTS'],path)
    end

    t.spec_opts<<"--format html:"+File.expand_path(path)
    t.spec_opts<<"-r"+File.expand_path('../ruby/spec_helper.rb',__FILE__)
  end


  # rspec
  Spec::Rake::SpecTask.new(:spec=>:default) do |t|
    speccing(t)
  end
end

desc "Task for cruisecontrol.rb"
  task :cruise => [:clean,:spec] do
end


namespace :spec do
  spec_cmd = (RUBY_PLATFORM =~ /java/) ? "jruby -S spec" : "./antargis /usr/bin/spec"
  task :showall do
    puts Dir["ruby/**/spec_*.rb"].select{|f|not f=~/spec_helper.rb/}.join("\n")
  end
  rule /^spec:/ do |t|
    arguments = t.name.split(':')
    
    file_name = arguments[1]
    spec_name = arguments[2..-1]

    spec_filename = "spec_#{file_name}.rb"
    specs = Dir["ruby/**/#{spec_filename}"]
    #pp specs
    
    if path = specs.detect { |f| spec_filename == File.basename(f) }
      run_file_name = path
    else
      puts "No specs found for #{t.name.inspect}"
      exit
    end

    example = " -e '#{spec_name}'" unless spec_name.empty?
    
    sh "#{spec_cmd} #{run_file_name} --format html:spec_output.html --colour #{example}"
  end
end


Rake::RDocTask.new do |rd|
   rd.main = "README"
   rd.title="Battles of Antargis"
   #rd.options << "--diagram"
   rd.rdoc_dir="docs/ruby"
   a=Dir["**/README"]+Dir["ruby/**/*.rb"]
   a=a.select{|f|not (f=~/_test/ or f=~/spec/)}
   rd.rdoc_files.include(a)
end


