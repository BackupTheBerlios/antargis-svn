.TH "AGBackground" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AGBackground \- 
.SH SYNOPSIS
.br
.PP
\fC#include <ag_background.h>\fP
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAGBackground\fP (const \fBAGString\fP &pThemeName='')"
.br
.ti -1c
.RI "\fBAGBackground\fP (const \fBAGColor\fP &pColor)"
.br
.ti -1c
.RI "void \fBdraw\fP (const \fBAGRect2\fP &r, \fBAGPainter\fP &p)"
.br
.RI "\fIdraws the background on painter in the given rectangle \fP"
.ti -1c
.RI "void \fBuseTextures\fP ()"
.br
.RI "\fIthis is a help function, so that once made textures aren't automatically discarded. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\fBAGBackground\fP is a helper class for widget-drawing It is used to draw gradients and tiled backgrounds of widgets. It is themable. 
.PP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AGBackground::AGBackground (const \fBAGString\fP & pThemeName = \fC''\fP)"
.PP
This constructor set a themed background. 
.PP
\fBParameters:\fP
.RS 4
\fIpThemeName\fP a typical string is 'button.background.normal'. Then the entry in the theme.xml file should look something like: 
.PP
.nf

 <button>
   <background>
     <normal>
       <color name='gradientColor1' color='#12141c'>
       <color name='gradientColor2' color='#12141c'>
       <color name='gradientColor3' color='#12141c'>
       <color name='gradientColor4' color='#12141c'>
     </normal>
   </background>
  </button>
.fi
.PP
 
.RE
.PP

.SS "AGBackground::AGBackground (const \fBAGColor\fP & pColor)"
.PP
sets a uniform background of color pColor 
.PP
\fBParameters:\fP
.RS 4
\fIpColor\fP an rgba-color. so you can use transparent backgrounds,too. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void AGBackground::draw (const \fBAGRect2\fP & r, \fBAGPainter\fP & p)"
.PP
draws the background on painter in the given rectangle 
.PP
.SS "void AGBackground::useTextures ()"
.PP
this is a help function, so that once made textures aren't automatically discarded. 
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
