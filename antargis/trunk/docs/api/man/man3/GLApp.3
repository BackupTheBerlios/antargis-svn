.TH "GLApp" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GLApp \- 
.SH SYNOPSIS
.br
.PP
\fC#include <ant_app.h>\fP
.PP
Inherits \fBAGApplication\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGLApp\fP (int w, int h)"
.br
.ti -1c
.RI "\fB~GLApp\fP ()"
.br
.ti -1c
.RI "virtual void \fBdraw\fP ()"
.br
.RI "\fIcalls the draw-function of the main-widget \fP"
.ti -1c
.RI "void \fBdrawGL\fP ()"
.br
.ti -1c
.RI "bool \fBeventFrame\fP (float t)"
.br
.RI "\fIcalled between event-handling and drawing \fP"
.ti -1c
.RI "virtual void \fBeventClick\fP (const \fBScene::PickResult\fP &pNodes, int button)"
.br
.ti -1c
.RI "virtual void \fBeventHover\fP (const \fBScene::PickResult\fP &pNodes, int button)"
.br
.ti -1c
.RI "virtual bool \fBeventMouseButtonDown\fP (\fBAGEvent\fP *m)"
.br
.ti -1c
.RI "virtual bool \fBeventMouseButtonUp\fP (\fBAGEvent\fP *m)"
.br
.ti -1c
.RI "virtual bool \fBeventMouseMotion\fP (\fBAGEvent\fP *m)"
.br
.ti -1c
.RI "virtual bool \fBeventKeyDown\fP (\fBAGEvent\fP *m)"
.br
.ti -1c
.RI "\fBScene\fP & \fBgetScene\fP ()"
.br
.ti -1c
.RI "virtual float \fBgetCameraHeight\fP (const \fBAGVector2\fP &p)"
.br
.ti -1c
.RI "virtual void \fBsetCamera\fP (const \fBAGVector2\fP &p)"
.br
.ti -1c
.RI "\fBAGVector2\fP \fBgetCamera\fP () const "
.br
.ti -1c
.RI "void \fBmark\fP ()"
.br
.RI "\fImark my mainWidget and my tooltip, as they can be ruby-objects \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBScene\fP \fBscene\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "GLApp::GLApp (int w, int h)"
.PP
.SS "GLApp::~GLApp ()"
.PP
.SH "Member Function Documentation"
.PP 
.SS "void GLApp::draw ()\fC [virtual]\fP"
.PP
calls the draw-function of the main-widget 
.PP
\fBAGApplication::draw()\fP calls the draw-function of the mainWidget and cares about drawing a custom mouse-cursor, the tooltip and possible overlays. At the end the screen-buffer is flipped. 
.PP
Reimplemented from \fBAGApplication\fP.
.SS "void GLApp::drawGL ()"
.PP
.SS "void GLApp::eventClick (const \fBScene::PickResult\fP & pNodes, int button)\fC [virtual]\fP"
.PP
.SS "bool GLApp::eventFrame (float t)\fC [virtual]\fP"
.PP
called between event-handling and drawing 
.PP
Reimplemented from \fBAGApplication\fP.
.SS "void GLApp::eventHover (const \fBScene::PickResult\fP & pNodes, int button)\fC [virtual]\fP"
.PP
.SS "bool GLApp::eventKeyDown (\fBAGEvent\fP * m)\fC [virtual]\fP"
.PP
Reimplemented from \fBAGApplication\fP.
.SS "bool GLApp::eventMouseButtonDown (\fBAGEvent\fP * m)\fC [virtual]\fP"
.PP
Reimplemented from \fBAGMessageObject\fP.
.SS "bool GLApp::eventMouseButtonUp (\fBAGEvent\fP * m)\fC [virtual]\fP"
.PP
Reimplemented from \fBAGMessageObject\fP.
.SS "bool GLApp::eventMouseMotion (\fBAGEvent\fP * m)\fC [virtual]\fP"
.PP
Reimplemented from \fBAGApplication\fP.
.SS "\fBAGVector2\fP GLApp::getCamera () const"
.PP
.SS "float GLApp::getCameraHeight (const \fBAGVector2\fP & p)\fC [virtual]\fP"
.PP
.SS "\fBScene\fP & GLApp::getScene ()"
.PP
.SS "void GLApp::mark ()\fC [virtual]\fP"
.PP
mark my mainWidget and my tooltip, as they can be ruby-objects 
.PP
Reimplemented from \fBAGApplication\fP.
.SS "void GLApp::setCamera (const \fBAGVector2\fP & p)\fC [virtual]\fP"
.PP
.SH "Member Data Documentation"
.PP 
.SS "\fBScene\fP \fBGLApp::scene\fP\fC [protected]\fP"
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
