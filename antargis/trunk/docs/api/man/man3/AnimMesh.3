.TH "AnimMesh" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AnimMesh \- 
.SH SYNOPSIS
.br
.PP
\fC#include <anim_mesh.h>\fP
.PP
Inherits \fBSceneNode\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAnimMesh\fP (\fBScene\fP *pScene, \fBAnimMeshData\fP *data)"
.br
.ti -1c
.RI "virtual \fB~AnimMesh\fP ()"
.br
.ti -1c
.RI "void \fBsetTransform\fP (const \fBAGMatrix4\fP &m)"
.br
.ti -1c
.RI "\fBAGString\fP \fBgetAnimation\fP () const "
.br
.ti -1c
.RI "bool \fBsetAnimation\fP (const \fBAGString\fP &pName)"
.br
.ti -1c
.RI "void \fBsetPos\fP (const \fBAGVector3\fP &p)"
.br
.ti -1c
.RI "void \fBsetRotation\fP (const \fBAGVector3\fP &r, float a)"
.br
.ti -1c
.RI "void \fBsetRotation\fP (float r)"
.br
.ti -1c
.RI "\fBAnimMeshData\fP * \fBgetData\fP ()"
.br
.ti -1c
.RI "virtual void \fBdraw\fP ()"
.br
.ti -1c
.RI "virtual void \fBdrawDepth\fP ()"
.br
.ti -1c
.RI "virtual void \fBdrawPick\fP ()"
.br
.ti -1c
.RI "virtual void \fBadvance\fP (float time)"
.br
.RI "\fIadvance mesh - e.g. animation \fP"
.ti -1c
.RI "virtual void \fBmark\fP ()"
.br
.RI "\fIoverride this function to mark your children \fP"
.ti -1c
.RI "void \fBsetEntity\fP (\fBAntEntity\fP *e)"
.br
.ti -1c
.RI "virtual size_t \fBgetTriangles\fP () const "
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBAnimMesh\fP is a skeleton animated mesh. It support either shader-based and cpu-based animation. 
.PP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AnimMesh::AnimMesh (\fBScene\fP * pScene, \fBAnimMeshData\fP * data)"
.PP
.SS "AnimMesh::~AnimMesh ()\fC [virtual]\fP"
.PP
.SH "Member Function Documentation"
.PP 
.SS "void AnimMesh::advance (float time)\fC [virtual]\fP"
.PP
advance mesh - e.g. animation 
.PP
Reimplemented from \fBSceneNode\fP.
.SS "void AnimMesh::draw ()\fC [virtual]\fP"
.PP
Reimplemented from \fBSceneNode\fP.
.SS "void AnimMesh::drawDepth ()\fC [virtual]\fP"
.PP
This functions is used in the 1st depth-drawing render-pass, so you should not use colors or textures, when not needed 
.PP
Reimplemented from \fBSceneNode\fP.
.SS "void AnimMesh::drawPick ()\fC [virtual]\fP"
.PP
this function is used for picking objects. Picking is done one CPU, so shader-animated models are out of place here. 
.PP
Reimplemented from \fBSceneNode\fP.
.SS "\fBAGString\fP AnimMesh::getAnimation () const"
.PP
.SS "\fBAnimMeshData\fP * AnimMesh::getData ()"
.PP
.SS "size_t AnimMesh::getTriangles () const\fC [virtual]\fP"
.PP
Reimplemented from \fBSceneNode\fP.
.SS "void AnimMesh::mark ()\fC [virtual]\fP"
.PP
override this function to mark your children 
.PP
Reimplemented from \fBAGRubyObject\fP.
.SS "bool AnimMesh::setAnimation (const \fBAGString\fP & pName)"
.PP
.SS "void AnimMesh::setEntity (\fBAntEntity\fP * e)"
.PP
.SS "void AnimMesh::setPos (const \fBAGVector3\fP & p)\fC [virtual]\fP"
.PP
Reimplemented from \fBSceneNode\fP.
.SS "void AnimMesh::setRotation (float r)\fC [virtual]\fP"
.PP
Reimplemented from \fBSceneNode\fP.
.SS "void AnimMesh::setRotation (const \fBAGVector3\fP & r, float a)"
.PP
.SS "void AnimMesh::setTransform (const \fBAGMatrix4\fP & m)"
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
