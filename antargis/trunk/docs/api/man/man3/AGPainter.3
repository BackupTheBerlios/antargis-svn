.TH "AGPainter" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AGPainter \- 
.SH SYNOPSIS
.br
.PP
\fC#include <ag_painter.h>\fP
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAGPainter\fP ()"
.br
.ti -1c
.RI "\fBAGPainter\fP (const \fBAGPainter\fP &p)"
.br
.ti -1c
.RI "\fBAGPainter\fP (\fBAGPaintTarget\fP &pTarget)"
.br
.ti -1c
.RI "\fB~AGPainter\fP ()"
.br
.ti -1c
.RI "void \fBputPixel\fP (const \fBAGVector2\fP &p, const \fBAGColor\fP &c)"
.br
.ti -1c
.RI "\fBAGColor\fP \fBgetPixel\fP (int x, int y)"
.br
.ti -1c
.RI "void \fBdrawCircle\fP (const \fBAGVector2\fP &p, float rad, const \fBAGColor\fP &c)"
.br
.ti -1c
.RI "void \fBblitTri\fP (const \fBAGTexture\fP &pSource, const \fBAGTriangle2\fP &pSrc, const \fBAGTriangle2\fP &pDest)"
.br
.ti -1c
.RI "void \fBblit\fP (const \fBAGTexture\fP &pSource, const \fBAGRect2\fP &pDest)"
.br
.ti -1c
.RI "void \fBblit\fP (const \fBAGTexture\fP &pSource, const \fBAGRect2\fP &pDest, const \fBAGColor\fP &pColor)"
.br
.ti -1c
.RI "void \fBblit\fP (const \fBAGTexture\fP &pSource, const \fBAGRect2\fP &pDest, const \fBAGRect2\fP &pSrc)"
.br
.ti -1c
.RI "void \fBblit\fP (const \fBAGTexture\fP &pSource, const \fBAGRect2\fP &pDest, const \fBAGRect2\fP &pSrc, const \fBAGColor\fP &pColor)"
.br
.ti -1c
.RI "void \fBtile\fP (const \fBAGTexture\fP &pSource)"
.br
.ti -1c
.RI "void \fBtile\fP (const \fBAGTexture\fP &pSource, const \fBAGRect2\fP &pDest)"
.br
.ti -1c
.RI "void \fBtile\fP (const \fBAGTexture\fP &pSource, const \fBAGRect2\fP &pDest, const \fBAGRect2\fP &pSrc)"
.br
.ti -1c
.RI "void \fBblit\fP (const \fBAGSurface\fP &pSource, const \fBAGRect2\fP &pDest)"
.br
.ti -1c
.RI "void \fBblit\fP (const \fBAGSurface\fP &pSource, const \fBAGRect2\fP &pDest, const \fBAGRect2\fP &pSrc)"
.br
.ti -1c
.RI "void \fBtile\fP (const \fBAGSurface\fP &pSource)"
.br
.ti -1c
.RI "void \fBtile\fP (const \fBAGSurface\fP &pSource, const \fBAGRect2\fP &pDest)"
.br
.ti -1c
.RI "void \fBtile\fP (const \fBAGSurface\fP &pSource, const \fBAGRect2\fP &pDest, const \fBAGRect2\fP &pSrc)"
.br
.ti -1c
.RI "void \fBrenderText\fP (const \fBAGStringUtf8\fP &pText, const \fBAGVector2\fP &p, const \fBAGFont\fP &f)"
.br
.ti -1c
.RI "\fBAGRect2\fP \fBgetRect\fP () const "
.br
.ti -1c
.RI "void \fBdrawGradient\fP (const \fBAGRect2\fP &r, const \fBAGColor\fP &c0, const \fBAGColor\fP &c1, const \fBAGColor\fP &c2, const \fBAGColor\fP &c3)"
.br
.ti -1c
.RI "void \fBdrawBorder\fP (const \fBAGRect2\fP &rect, int width, const \fBAGColor\fP &c1, const \fBAGColor\fP &c2)"
.br
.ti -1c
.RI "void \fBfillRect\fP (const \fBAGRect2\fP &pRect, const \fBAGColor\fP &c)"
.br
.ti -1c
.RI "void \fBdrawLine\fP (const \fBAGVector2\fP &p0, const \fBAGVector2\fP &p1, const \fBAGColor\fP &c)"
.br
.ti -1c
.RI "void \fBdrawPoint\fP (const \fBAGVector2\fP &p, const \fBAGColor\fP &c, float size)"
.br
.ti -1c
.RI "void \fBfillRects\fP (const std::vector< std::pair< \fBAGRect2\fP, \fBAGVector4\fP > > &pRects)"
.br
.ti -1c
.RI "void \fBpushMatrix\fP ()"
.br
.ti -1c
.RI "void \fBpopMatrix\fP ()"
.br
.ti -1c
.RI "void \fBtranslate\fP (const \fBAGVector2\fP &v)"
.br
.ti -1c
.RI "void \fBscale\fP (const \fBAGVector2\fP &v)"
.br
.ti -1c
.RI "void \fBclip\fP (const \fBAGRect2\fP &r)"
.br
.ti -1c
.RI "void \fBtransform\fP (const \fBAGRect2\fP &r)"
.br
.ti -1c
.RI "\fBAGVector2\fP \fBproject\fP (const \fBAGVector2\fP &p) const "
.br
.ti -1c
.RI "bool \fBpointOk\fP (const \fBAGVector2\fP &p) const "
.br
.ti -1c
.RI "\fBAGPaintTarget\fP * \fBgetTarget\fP ()"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AGPainter::AGPainter ()"
.PP
.SS "AGPainter::AGPainter (const \fBAGPainter\fP & p)"
.PP
.SS "AGPainter::AGPainter (\fBAGPaintTarget\fP & pTarget)"
.PP
.SS "AGPainter::~AGPainter ()"
.PP
.SH "Member Function Documentation"
.PP 
.SS "void AGPainter::blit (const \fBAGSurface\fP & pSource, const \fBAGRect2\fP & pDest, const \fBAGRect2\fP & pSrc)"
.PP
.SS "void AGPainter::blit (const \fBAGSurface\fP & pSource, const \fBAGRect2\fP & pDest)"
.PP
.SS "void AGPainter::blit (const \fBAGTexture\fP & pSource, const \fBAGRect2\fP & pDest, const \fBAGRect2\fP & pSrc, const \fBAGColor\fP & pColor)"
.PP
.SS "void AGPainter::blit (const \fBAGTexture\fP & pSource, const \fBAGRect2\fP & pDest, const \fBAGRect2\fP & pSrc)"
.PP
.SS "void AGPainter::blit (const \fBAGTexture\fP & pSource, const \fBAGRect2\fP & pDest, const \fBAGColor\fP & pColor)"
.PP
.SS "void AGPainter::blit (const \fBAGTexture\fP & pSource, const \fBAGRect2\fP & pDest)"
.PP
.SS "void AGPainter::blitTri (const \fBAGTexture\fP & pSource, const \fBAGTriangle2\fP & pSrc, const \fBAGTriangle2\fP & pDest)"
.PP
.SS "void AGPainter::clip (const \fBAGRect2\fP & r)"
.PP
.SS "void AGPainter::drawBorder (const \fBAGRect2\fP & rect, int width, const \fBAGColor\fP & c1, const \fBAGColor\fP & c2)"
.PP
.SS "void AGPainter::drawCircle (const \fBAGVector2\fP & p, float rad, const \fBAGColor\fP & c)"
.PP
.SS "void AGPainter::drawGradient (const \fBAGRect2\fP & r, const \fBAGColor\fP & c0, const \fBAGColor\fP & c1, const \fBAGColor\fP & c2, const \fBAGColor\fP & c3)"
.PP
.SS "void AGPainter::drawLine (const \fBAGVector2\fP & p0, const \fBAGVector2\fP & p1, const \fBAGColor\fP & c)"
.PP
.SS "void AGPainter::drawPoint (const \fBAGVector2\fP & p, const \fBAGColor\fP & c, float size)"
.PP
.SS "void AGPainter::fillRect (const \fBAGRect2\fP & pRect, const \fBAGColor\fP & c)"
.PP
.SS "void AGPainter::fillRects (const std::vector< std::pair< \fBAGRect2\fP, \fBAGVector4\fP > > & pRects)"
.PP
.SS "\fBAGColor\fP AGPainter::getPixel (int x, int y)"
.PP
.SS "\fBAGRect2\fP AGPainter::getRect () const"
.PP
.SS "\fBAGPaintTarget\fP * AGPainter::getTarget ()"
.PP
.SS "bool AGPainter::pointOk (const \fBAGVector2\fP & p) const"
.PP
.SS "void AGPainter::popMatrix ()"
.PP
.SS "\fBAGVector2\fP AGPainter::project (const \fBAGVector2\fP & p) const"
.PP
.SS "void AGPainter::pushMatrix ()"
.PP
.SS "void AGPainter::putPixel (const \fBAGVector2\fP & p, const \fBAGColor\fP & c)"
.PP
.SS "void AGPainter::renderText (const \fBAGStringUtf8\fP & pText, const \fBAGVector2\fP & p, const \fBAGFont\fP & f)"
.PP
.SS "void AGPainter::scale (const \fBAGVector2\fP & v)"
.PP
.SS "void AGPainter::tile (const \fBAGSurface\fP & pSource, const \fBAGRect2\fP & pDest, const \fBAGRect2\fP & pSrc)"
.PP
.SS "void AGPainter::tile (const \fBAGSurface\fP & pSource, const \fBAGRect2\fP & pDest)"
.PP
.SS "void AGPainter::tile (const \fBAGSurface\fP & pSource)"
.PP
.SS "void AGPainter::tile (const \fBAGTexture\fP & pSource, const \fBAGRect2\fP & pDest, const \fBAGRect2\fP & pSrc)"
.PP
.SS "void AGPainter::tile (const \fBAGTexture\fP & pSource, const \fBAGRect2\fP & pDest)"
.PP
.SS "void AGPainter::tile (const \fBAGTexture\fP & pSource)"
.PP
.SS "void AGPainter::transform (const \fBAGRect2\fP & r)"
.PP
.SS "void AGPainter::translate (const \fBAGVector2\fP & v)"
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
