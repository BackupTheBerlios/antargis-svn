.TH "AGVector2" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AGVector2 \- 
.SH SYNOPSIS
.br
.PP
\fC#include <ag_geometry.h>\fP
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAGVector2\fP (const \fBAGString\fP &s)"
.br
.ti -1c
.RI "\fBAGVector2\fP (float pX, float pY)"
.br
.ti -1c
.RI "\fBAGVector2\fP (const \fBAGAngle\fP &a)"
.br
.ti -1c
.RI "\fBAGVector2\fP (const \fBAGVector2\fP &a)"
.br
.ti -1c
.RI "\fBAGVector2\fP ()"
.br
.ti -1c
.RI "void \fBsetX\fP (float pX)"
.br
.ti -1c
.RI "void \fBsetY\fP (float pY)"
.br
.ti -1c
.RI "float \fBgetX\fP () const "
.br
.ti -1c
.RI "float \fBgetY\fP () const "
.br
.ti -1c
.RI "\fBAGAngle\fP \fBgetAngle\fP () const "
.br
.ti -1c
.RI "\fBAGVector2\fP \fBoperator-\fP (const \fBAGVector2\fP &p) const "
.br
.ti -1c
.RI "\fBAGVector2\fP \fBoperator+\fP (const \fBAGVector2\fP &p) const "
.br
.ti -1c
.RI "\fBAGVector2\fP & \fBoperator+=\fP (const \fBAGVector2\fP &p)"
.br
.ti -1c
.RI "\fBAGVector2\fP & \fBoperator-=\fP (const \fBAGVector2\fP &p)"
.br
.ti -1c
.RI "float \fBoperator *\fP (const \fBAGVector2\fP &p) const "
.br
.ti -1c
.RI "\fBAGVector2\fP & \fBoperator *=\fP (float f)"
.br
.ti -1c
.RI "\fBAGVector2\fP & \fBoperator/=\fP (float f)"
.br
.ti -1c
.RI "\fBAGVector2\fP \fBoperator *\fP (float f) const "
.br
.ti -1c
.RI "\fBAGVector2\fP \fBoperator/\fP (float f) const "
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBAGVector2\fP &a) const "
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBAGVector2\fP &a) const "
.br
.ti -1c
.RI "float \fBlength\fP () const "
.br
.ti -1c
.RI "float \fBlength2\fP () const "
.br
.ti -1c
.RI "\fBAGVector2\fP \fBnormalized\fP () const "
.br
.ti -1c
.RI "void \fBnormalize\fP ()"
.br
.ti -1c
.RI "\fBAGVector2\fP \fBnormal\fP () const "
.br
.ti -1c
.RI "float \fBoperator[]\fP (int index) const "
.br
.ti -1c
.RI "float & \fBoperator[]\fP (int index)"
.br
.ti -1c
.RI "bool \fBnonZero\fP () const "
.br
.ti -1c
.RI "void \fBsaveXML\fP (\fBNode\fP &node) const "
.br
.ti -1c
.RI "void \fBloadXML\fP (const \fBNode\fP &node)"
.br
.ti -1c
.RI "\fBAGString\fP \fBtoString\fP () const "
.br
.ti -1c
.RI "\fBoperator float *)\fP ()"
.br
.ti -1c
.RI "\fBoperator const float *)\fP () const "
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "float \fBv\fP [2]"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AGVector2::AGVector2 (const \fBAGString\fP & s)"
.PP
.SS "AGVector2::AGVector2 (float pX, float pY)"
.PP
.SS "AGVector2::AGVector2 (const \fBAGAngle\fP & a)"
.PP
.SS "AGVector2::AGVector2 (const \fBAGVector2\fP & a)"
.PP
.SS "AGVector2::AGVector2 ()"
.PP
.SH "Member Function Documentation"
.PP 
.SS "\fBAGAngle\fP AGVector2::getAngle () const"
.PP
.SS "float AGVector2::getX () const"
.PP
.SS "float AGVector2::getY () const"
.PP
.SS "float AGVector2::length () const"
.PP
.SS "float AGVector2::length2 () const"
.PP
.SS "void AGVector2::loadXML (const \fBNode\fP & node)"
.PP
.SS "bool AGVector2::nonZero () const"
.PP
.SS "\fBAGVector2\fP AGVector2::normal () const"
.PP
.SS "void AGVector2::normalize ()"
.PP
.SS "\fBAGVector2\fP AGVector2::normalized () const"
.PP
.SS "\fBAGVector2\fP AGVector2::operator * (float f) const"
.PP
.SS "float AGVector2::operator * (const \fBAGVector2\fP & p) const"
.PP
.SS "\fBAGVector2\fP & AGVector2::operator *= (float f)"
.PP
.SS "AGVector2::operator const float *) () const"
.PP
.SS "AGVector2::operator float *) ()"
.PP
.SS "bool AGVector2::operator!= (const \fBAGVector2\fP & a) const"
.PP
.SS "\fBAGVector2\fP AGVector2::operator+ (const \fBAGVector2\fP & p) const"
.PP
.SS "\fBAGVector2\fP & AGVector2::operator+= (const \fBAGVector2\fP & p)"
.PP
.SS "\fBAGVector2\fP AGVector2::operator- (const \fBAGVector2\fP & p) const"
.PP
.SS "\fBAGVector2\fP & AGVector2::operator-= (const \fBAGVector2\fP & p)"
.PP
.SS "\fBAGVector2\fP AGVector2::operator/ (float f) const"
.PP
.SS "\fBAGVector2\fP & AGVector2::operator/= (float f)"
.PP
.SS "bool AGVector2::operator== (const \fBAGVector2\fP & a) const"
.PP
.SS "float & AGVector2::operator[] (int index)"
.PP
.SS "float AGVector2::operator[] (int index) const"
.PP
.SS "void AGVector2::saveXML (\fBNode\fP & node) const"
.PP
.SS "void AGVector2::setX (float pX)"
.PP
.SS "void AGVector2::setY (float pY)"
.PP
.SS "\fBAGString\fP AGVector2::toString () const"
.PP
.SH "Member Data Documentation"
.PP 
.SS "float \fBAGVector2::v\fP[2]"
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
