.TH "AGGLPainter" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AGGLPainter \- 
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBglColor\fP (const \fBAGColor\fP &c)"
.br
.ti -1c
.RI "void \fBblit\fP (const \fBAGTexture\fP &pSource, const \fBAGRect2\fP &pRect, const \fBAGRect2\fP &pSrc, const \fBAGColor\fP &pColor)"
.br
.ti -1c
.RI "void \fBblit\fP (const \fBAGTexture\fP &pSource, const std::vector< std::pair< \fBAGRect2\fP, \fBAGRect2\fP > > &pSrcDestRects, const \fBAGColor\fP &pColor)"
.br
.ti -1c
.RI "void \fBtile\fP (const \fBAGTexture\fP &pSource, const \fBAGRect2\fP &pTarget, const \fBAGColor\fP &pColor)"
.br
.ti -1c
.RI "void \fBfillRect\fP (const \fBAGRect2\fP &pRect, const \fBAGColor\fP &c)"
.br
.ti -1c
.RI "void \fBfillRects\fP (const std::vector< std::pair< \fBAGRect2\fP, \fBAGVector4\fP > > &pRects)"
.br
.ti -1c
.RI "void \fBdrawGradientAlpha\fP (const \fBAGRect2\fP &pRect, const \fBAGColor\fP &ul, const \fBAGColor\fP &ur, const \fBAGColor\fP &dl, const \fBAGColor\fP &dr)"
.br
.ti -1c
.RI "void \fBdrawBorder\fP (const \fBAGRect2\fP &rect, int W, const \fBAGColor\fP &c1, const \fBAGColor\fP &c2)"
.br
.ti -1c
.RI "void \fBputPixel\fP (int x, int y, const \fBAGColor\fP &pc)"
.br
.ti -1c
.RI "void \fBdrawLine\fP (const \fBAGVector2\fP &p0, const \fBAGVector2\fP &p1, const \fBAGColor\fP &c, float pWidth)"
.br
.ti -1c
.RI "void \fBblitTri\fP (const \fBAGTexture\fP &pSource, const \fBAGTriangle2\fP &pSrc, const \fBAGTriangle2\fP &pDest)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This module provides painting on OpenGL, which is used by \fBAGGLScreen\fP and \fBAGTexture\fP (that's the reason it's here). 
.PP
.SH "Function Documentation"
.PP 
.SS "void AGGLPainter::blit (const \fBAGTexture\fP & pSource, const std::vector< std::pair< \fBAGRect2\fP, \fBAGRect2\fP > > & pSrcDestRects, const \fBAGColor\fP & pColor)"
.PP
.SS "void AGGLPainter::blit (const \fBAGTexture\fP & pSource, const \fBAGRect2\fP & pRect, const \fBAGRect2\fP & pSrc, const \fBAGColor\fP & pColor)"
.PP
.SS "void AGGLPainter::blitTri (const \fBAGTexture\fP & pSource, const \fBAGTriangle2\fP & pSrc, const \fBAGTriangle2\fP & pDest)"
.PP
.SS "void AGGLPainter::drawBorder (const \fBAGRect2\fP & rect, int W, const \fBAGColor\fP & c1, const \fBAGColor\fP & c2)"
.PP
.SS "void AGGLPainter::drawGradientAlpha (const \fBAGRect2\fP & pRect, const \fBAGColor\fP & ul, const \fBAGColor\fP & ur, const \fBAGColor\fP & dl, const \fBAGColor\fP & dr)"
.PP
.SS "void AGGLPainter::drawLine (const \fBAGVector2\fP & p0, const \fBAGVector2\fP & p1, const \fBAGColor\fP & c, float pWidth)"
.PP
.SS "void AGGLPainter::fillRect (const \fBAGRect2\fP & pRect, const \fBAGColor\fP & c)"
.PP
.SS "void AGGLPainter::fillRects (const std::vector< std::pair< \fBAGRect2\fP, \fBAGVector4\fP > > & pRects)"
.PP
.SS "void AGGLPainter::glColor (const \fBAGColor\fP & c)"
.PP
.SS "void AGGLPainter::putPixel (int x, int y, const \fBAGColor\fP & pc)"
.PP
.SS "void AGGLPainter::tile (const \fBAGTexture\fP & pSource, const \fBAGRect2\fP & pTarget, const \fBAGColor\fP & pColor)"
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
