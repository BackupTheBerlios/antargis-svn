.TH "AGMatrix4" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AGMatrix4 \- 
.SH SYNOPSIS
.br
.PP
\fC#include <ag_geometry.h>\fP
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAGMatrix4\fP ()"
.br
.ti -1c
.RI "\fBAGMatrix4\fP (float v[16])"
.br
.ti -1c
.RI "\fBAGMatrix4\fP (float angle, const \fBAGVector3\fP &d)"
.br
.ti -1c
.RI "\fBAGMatrix4\fP (const \fBAGVector4\fP &a)"
.br
.ti -1c
.RI "void \fBset\fP (size_t x, size_t y, float f)"
.br
.ti -1c
.RI "float \fBget\fP (size_t x, size_t y) const "
.br
.ti -1c
.RI "float & \fBget\fP (size_t x, size_t y)"
.br
.ti -1c
.RI "\fBAGMatrix4\fP \fBoperator *\fP (const \fBAGMatrix4\fP &m) const "
.br
.ti -1c
.RI "\fBAGMatrix4\fP & \fBoperator *=\fP (const \fBAGMatrix4\fP &m)"
.br
.ti -1c
.RI "\fBAGMatrix4\fP & \fBoperator+=\fP (const \fBAGMatrix4\fP &m)"
.br
.ti -1c
.RI "\fBAGMatrix3\fP \fBget3x3\fP (size_t x, size_t y) const "
.br
.ti -1c
.RI "\fBAGVector4\fP \fBoperator *\fP (const \fBAGVector4\fP &v) const "
.br
.ti -1c
.RI "float \fBoperator()\fP (size_t x, size_t y) const "
.br
.ti -1c
.RI "float & \fBoperator()\fP (size_t x, size_t y)"
.br
.ti -1c
.RI "\fBAGMatrix4\fP \fBinverted\fP () const "
.br
.ti -1c
.RI "\fBAGMatrix4\fP \fBtransposed\fP () const "
.br
.ti -1c
.RI "\fBMRow\fP \fBoperator[]\fP (size_t y)"
.br
.ti -1c
.RI "\fBAGString\fP \fBtoString\fP () const "
.br
.ti -1c
.RI "\fBoperator float *)\fP ()"
.br
.ti -1c
.RI "\fBoperator const float *)\fP () const "
.br
.ti -1c
.RI "\fBAGVector4\fP \fBgetRow\fP (size_t i) const "
.br
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBMRow\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AGMatrix4::AGMatrix4 ()"
.PP
.SS "AGMatrix4::AGMatrix4 (float v[16])"
.PP
.SS "AGMatrix4::AGMatrix4 (float angle, const \fBAGVector3\fP & d)"
.PP
.SS "AGMatrix4::AGMatrix4 (const \fBAGVector4\fP & a)"
.PP
.SH "Member Function Documentation"
.PP 
.SS "float & AGMatrix4::get (size_t x, size_t y)"
.PP
.SS "float AGMatrix4::get (size_t x, size_t y) const"
.PP
.SS "\fBAGMatrix3\fP AGMatrix4::get3x3 (size_t x, size_t y) const"
.PP
.SS "\fBAGVector4\fP AGMatrix4::getRow (size_t i) const"
.PP
.SS "\fBAGMatrix4\fP AGMatrix4::inverted () const"
.PP
.SS "\fBAGVector4\fP AGMatrix4::operator * (const \fBAGVector4\fP & v) const"
.PP
.SS "\fBAGMatrix4\fP AGMatrix4::operator * (const \fBAGMatrix4\fP & m) const"
.PP
.SS "\fBAGMatrix4\fP & AGMatrix4::operator *= (const \fBAGMatrix4\fP & m)"
.PP
.SS "AGMatrix4::operator const float *) () const"
.PP
.SS "AGMatrix4::operator float *) ()"
.PP
.SS "float & AGMatrix4::operator() (size_t x, size_t y)"
.PP
.SS "float AGMatrix4::operator() (size_t x, size_t y) const"
.PP
.SS "\fBAGMatrix4\fP & AGMatrix4::operator+= (const \fBAGMatrix4\fP & m)"
.PP
.SS "\fBAGMatrix4::MRow\fP AGMatrix4::operator[] (size_t y)"
.PP
.SS "void AGMatrix4::set (size_t x, size_t y, float f)"
.PP
.SS "\fBAGString\fP AGMatrix4::toString () const"
.PP
.SS "\fBAGMatrix4\fP AGMatrix4::transposed () const"
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
