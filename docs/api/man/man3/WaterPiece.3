.TH "WaterPiece" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
WaterPiece \- 
.SH SYNOPSIS
.br
.PP
\fC#include <water.h>\fP
.PP
Inherits \fBSceneNode\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBWaterPiece\fP (\fBScene\fP *pScene, \fBHeightMap\fP &map, int x, int y, int w, int h, const \fBAGVector4\fP &pos)"
.br
.ti -1c
.RI "virtual \fB~WaterPiece\fP ()"
.br
.ti -1c
.RI "void \fBdraw\fP ()"
.br
.RI "\fIdraw in normal mode \fP"
.ti -1c
.RI "void \fBdrawPick\fP ()"
.br
.RI "\fIdraw for picking (without shader) \fP"
.ti -1c
.RI "void \fBadvance\fP (float t)"
.br
.RI "\fIadvance animation \fP"
.ti -1c
.RI "size_t \fBgetTriangles\fP () const "
.br
.ti -1c
.RI "bool \fBtransparent\fP ()"
.br
.ti -1c
.RI "virtual void \fBmapChanged\fP ()"
.br
.RI "\fIcheck for visibility, set bounding box and update vertex-array \fP"
.in -1c
.SH "Detailed Description"
.PP 
A waterpiece is a scenenode, that displays some small patch of water. Water has currently always the same height (==0). The water is rendered with a VertexArray-object and is able to use some minor vertex shading for animation. In future some fragment shader using fresnel effects would be nice :-) 
.PP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "WaterPiece::WaterPiece (\fBScene\fP * pScene, \fBHeightMap\fP & map, int x, int y, int w, int h, const \fBAGVector4\fP & pos)"
.PP
.SS "WaterPiece::~WaterPiece ()\fC [virtual]\fP"
.PP
.SH "Member Function Documentation"
.PP 
.SS "void WaterPiece::advance (float t)\fC [virtual]\fP"
.PP
advance animation 
.PP
Reimplemented from \fBSceneNode\fP.
.SS "void WaterPiece::draw ()\fC [virtual]\fP"
.PP
draw in normal mode 
.PP
Reimplemented from \fBSceneNode\fP.
.SS "void WaterPiece::drawPick ()\fC [virtual]\fP"
.PP
draw for picking (without shader) 
.PP
Reimplemented from \fBSceneNode\fP.
.SS "size_t WaterPiece::getTriangles () const\fC [virtual]\fP"
.PP
Reimplemented from \fBSceneNode\fP.
.SS "void WaterPiece::mapChanged ()\fC [virtual]\fP"
.PP
check for visibility, set bounding box and update vertex-array 
.PP
.SS "bool WaterPiece::transparent ()\fC [virtual]\fP"
.PP
indicates, if this object is transparent. if that's the case, it will be drawn later. drawing goes like this:1)draw all opaque objects from front to back; 2)draw transparent from back to front this is the fastest way to do this 
.PP
Reimplemented from \fBSceneNode\fP.

.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
