.TH "AGTable" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AGTable \- 
.SH SYNOPSIS
.br
.PP
\fC#include <ag_table.h>\fP
.PP
Inherits \fBAGWidget\fP.
.PP
Inherited by \fBAGMenu\fP, \fBAGMenuItem\fP, and \fBAGWindow\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAGTable\fP (\fBAGWidget\fP *pWidget, const \fBAGRect2\fP &pRect)"
.br
.ti -1c
.RI "virtual \fB~AGTable\fP ()"
.br
.ti -1c
.RI "void \fBaddFixedColumn\fP (float size)"
.br
.ti -1c
.RI "void \fBaddFixedRow\fP (float size)"
.br
.ti -1c
.RI "void \fBaddColumn\fP (float weight)"
.br
.ti -1c
.RI "void \fBaddRow\fP (float weight)"
.br
.ti -1c
.RI "void \fBaddChild\fP (int x, int y, \fBAGWidget\fP *pWidget)"
.br
.RI "\fIadds a widget to the given cell (px,py) \fP"
.ti -1c
.RI "\fBAGRect2\fP \fBgetClientRect\fP (int x, int y) const "
.br
.RI "\fIreturns the Position and size of a given cell (x,y) \fP"
.ti -1c
.RI "void \fBarrange\fP ()"
.br
.ti -1c
.RI "virtual void \fBsetWidth\fP (float w)"
.br
.ti -1c
.RI "virtual void \fBsetHeight\fP (float w)"
.br
.ti -1c
.RI "size_t \fBgetRows\fP () const "
.br
.ti -1c
.RI "size_t \fBgetColumns\fP () const "
.br
.in -1c
.SH "Detailed Description"
.PP 
Description: At first you can adjust rows/columns - then you can insert some children. after that rows and columns are fixed.
.PP
Please call \fBAGTable::arrange()\fP whenever you changed extends and/or row/column-info.
.PP
\fBTodo\fP
.RS 4
children should be re-arranged whenever \fBAGTable::arrange()\fP is called! 
.RE
.PP

.PP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AGTable::AGTable (\fBAGWidget\fP * pWidget, const \fBAGRect2\fP & pRect)"
.PP
.SS "AGTable::~AGTable ()\fC [virtual]\fP"
.PP
.SH "Member Function Documentation"
.PP 
.SS "void AGTable::addChild (int x, int y, \fBAGWidget\fP * pWidget)"
.PP
adds a widget to the given cell (px,py) 
.PP
.SS "void AGTable::addColumn (float weight)"
.PP
add a column with relative size. 
.PP
\fBParameters:\fP
.RS 4
\fIweight\fP All weights of columns are summed up. After giving their space to the fixed columns ( \fBAGTable::addFixedColumn()\fP ), each relative sized column gets its relative size according the weight. (size_left*weight/sum(weights)) 
.RE
.PP

.SS "void AGTable::addFixedColumn (float size)"
.PP
add a column with fixed size of 'size' 
.PP
\fBParameters:\fP
.RS 4
\fIsize\fP gives to size of the column in pixels 
.RE
.PP

.SS "void AGTable::addFixedRow (float size)"
.PP
add a row with fixed size of 'size' 
.PP
\fBParameters:\fP
.RS 4
\fIsize\fP gives to size of the row in pixels 
.RE
.PP

.SS "void AGTable::addRow (float weight)"
.PP
add a row with relative size. 
.PP
\fBParameters:\fP
.RS 4
\fIweight\fP All weights of rows are summed up. After giving their space to the fixed rows ( \fBAGTable::addFixedRow()\fP ), each relative sized row gets its relative size according the weight. (size_left*weight/sum(weights)) 
.RE
.PP

.SS "void AGTable::arrange ()"
.PP
.SS "\fBAGRect2\fP AGTable::getClientRect (int x, int y) const"
.PP
returns the Position and size of a given cell (x,y) 
.PP
.SS "size_t AGTable::getColumns () const"
.PP
.SS "size_t AGTable::getRows () const"
.PP
.SS "void AGTable::setHeight (float w)\fC [virtual]\fP"
.PP
Reimplemented from \fBAGWidget\fP.
.SS "void AGTable::setWidth (float w)\fC [virtual]\fP"
.PP
Reimplemented from \fBAGWidget\fP.

.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
