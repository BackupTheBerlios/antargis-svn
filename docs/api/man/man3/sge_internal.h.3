.TH "gui/src/sge_internal.h" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gui/src/sge_internal.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'sge_config.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBsge_C_ONLY\fP"
.br
.ti -1c
.RI "#define \fB_SGE_NO_CLASSES\fP"
.br
.ti -1c
.RI "#define \fBPI\fP   3.1414926535"
.br
.ti -1c
.RI "#define \fBSGE_FLAG0\fP   0x00"
.br
.ti -1c
.RI "#define \fBSGE_FLAG1\fP   0x01"
.br
.ti -1c
.RI "#define \fBSGE_FLAG2\fP   0x02"
.br
.ti -1c
.RI "#define \fBSGE_FLAG3\fP   0x04"
.br
.ti -1c
.RI "#define \fBSGE_FLAG4\fP   0x08"
.br
.ti -1c
.RI "#define \fBSGE_FLAG5\fP   0x10"
.br
.ti -1c
.RI "#define \fBSGE_FLAG6\fP   0x20"
.br
.ti -1c
.RI "#define \fBSGE_FLAG7\fP   0x40"
.br
.ti -1c
.RI "#define \fBSGE_FLAG8\fP   0x80"
.br
.ti -1c
.RI "#define \fBSDL_ALPHA_OPAQUE\fP   0"
.br
.ti -1c
.RI "#define \fBSDL_ALPHA_TRANSPARENT\fP   255"
.br
.ti -1c
.RI "#define \fBSDL_VERSIONNUM\fP(X, Y, Z)   (X)*1000 + (Y)*100 + (Z)"
.br
.ti -1c
.RI "#define \fBSDL_CreateRGBSurface\fP   SDL_AllocSurface"
.br
.ti -1c
.RI "#define \fBsge_clip_xmin\fP(pnt)   pnt->clip_minx"
.br
.ti -1c
.RI "#define \fBsge_clip_xmax\fP(pnt)   pnt->clip_maxx"
.br
.ti -1c
.RI "#define \fBsge_clip_ymin\fP(pnt)   pnt->clip_miny"
.br
.ti -1c
.RI "#define \fBsge_clip_ymax\fP(pnt)   pnt->clip_maxy"
.br
.ti -1c
.RI "#define \fBsge_RectUnion\fP(dst_rect, rect1, rect2)"
.br
.ti -1c
.RI "#define \fBsge_MapRGBA\fP(fmt, r, g, b, a)   SDL_MapRGB(fmt, r, g, b)"
.br
.ti -1c
.RI "#define \fBsge_GetRGBA\fP(pixel, fmt, r, g, b, a)   SDL_GetRGBA(pixel, fmt, r, g, b)"
.br
.ti -1c
.RI "#define \fBDECLSPEC\fP"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define _SGE_NO_CLASSES"
.PP
.SS "#define DECLSPEC"
.PP
.SS "#define PI   3.1414926535"
.PP
.SS "#define SDL_ALPHA_OPAQUE   0"
.PP
.SS "#define SDL_ALPHA_TRANSPARENT   255"
.PP
.SS "#define SDL_CreateRGBSurface   SDL_AllocSurface"
.PP
.SS "#define SDL_VERSIONNUM(X, Y, Z)   (X)*1000 + (Y)*100 + (Z)"
.PP
.SS "#define sge_C_ONLY"
.PP
.SS "#define sge_clip_xmax(pnt)   pnt->clip_maxx"
.PP
.SS "#define sge_clip_xmin(pnt)   pnt->clip_minx"
.PP
.SS "#define sge_clip_ymax(pnt)   pnt->clip_maxy"
.PP
.SS "#define sge_clip_ymin(pnt)   pnt->clip_miny"
.PP
.SS "#define SGE_FLAG0   0x00"
.PP
.SS "#define SGE_FLAG1   0x01"
.PP
.SS "#define SGE_FLAG2   0x02"
.PP
.SS "#define SGE_FLAG3   0x04"
.PP
.SS "#define SGE_FLAG4   0x08"
.PP
.SS "#define SGE_FLAG5   0x10"
.PP
.SS "#define SGE_FLAG6   0x20"
.PP
.SS "#define SGE_FLAG7   0x40"
.PP
.SS "#define SGE_FLAG8   0x80"
.PP
.SS "#define sge_GetRGBA(pixel, fmt, r, g, b, a)   SDL_GetRGBA(pixel, fmt, r, g, b)"
.PP
.SS "#define sge_MapRGBA(fmt, r, g, b, a)   SDL_MapRGB(fmt, r, g, b)"
.PP
.SS "#define sge_RectUnion(dst_rect, rect1, rect2)"
.PP
\fBValue:\fP
.PP
.nf
dst_rect.x = (rect1.x < rect2.x)? rect1.x:rect2.x;\
        dst_rect.y = (rect1.y < rect2.y)? rect1.y:rect2.y;\
        dst_rect.w = (rect1.x + rect1.w > rect2.x + rect2.w)? rect1.x + rect1.w - dst_rect.x : rect2.x + rect2.w - dst_rect.x;\
        dst_rect.h = (rect1.y + rect1.h > rect2.y + rect2.h)? rect1.y + rect1.h - dst_rect.y : rect2.y + rect2.h - dst_rect.y;
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
