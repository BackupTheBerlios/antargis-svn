.TH "gui/src/ag_rubyobj.cc" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gui/src/ag_rubyobj.cc \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'ag_rubyobj.h'\fP
.br
\fC#include 'ag_debug.h'\fP
.br
\fC#include 'ag_profiler.h'\fP
.br
\fC#include <assert.h>\fP
.br
\fC#include <typeinfo>\fP
.br
\fC#include <set>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <ruby.h>\fP
.br
\fC#include <ag_main.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBenableGC\fP ()"
.br
.ti -1c
.RI "void \fBdisableGC\fP ()"
.br
.ti -1c
.RI "void \fBgeneral_markfunc\fP (void *ptr)"
.br
.ti -1c
.RI "bool \fBsaveDelete\fP (\fBAGRubyObject\fP *o)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "std::set< \fBAGRubyObject\fP * > \fBgExistingRubies\fP"
.br
.ti -1c
.RI "size_t \fBdisableDepth\fP = 0"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void disableGC ()"
.PP
.SS "void enableGC ()"
.PP
.SS "void general_markfunc (void * ptr)"
.PP
this is the marking function, that gets called by ruby it handles all the AGRubyObjects 
.SS "bool saveDelete (\fBAGRubyObject\fP * o)"
.PP
saveDelete is used to delete AGRubyObjects savely.
.PP
ruby does a gc-run and then deletes everything, which is not marked so eventually sub-instances of a rubyobject are killed before a workaround for this: 1) put all deleted objects in a set 2) check set before clearing/deleting 3) clear this set when marking 
.SH "Variable Documentation"
.PP 
.SS "size_t \fBdisableDepth\fP = 0"
.PP
.SS "std::set<\fBAGRubyObject\fP*> \fBgExistingRubies\fP"
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
