.TH "AntMap" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AntMap \- 
.SH SYNOPSIS
.br
.PP
\fC#include <map.h>\fP
.PP
Inherits \fBHeightMap\fP.
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::list< \fBAntEntity\fP * > \fBEntityList\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAntMap\fP (\fBScene\fP *pScene, int w, int h)"
.br
.ti -1c
.RI "\fB~AntMap\fP ()"
.br
.ti -1c
.RI "virtual void \fBinsertEntity\fP (\fBAntEntity\fP *e)"
.br
.ti -1c
.RI "virtual void \fBremoveEntity\fP (\fBAntEntity\fP *p)"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "int \fBgetNewID\fP ()"
.br
.ti -1c
.RI "void \fBuseID\fP (int id)"
.br
.ti -1c
.RI "void \fBnewMap\fP (int w, int h)"
.br
.ti -1c
.RI "\fBEntityList\fP \fBgetEntities\fP (const \fBAGRect2\fP &r)"
.br
.ti -1c
.RI "\fBEntityList\fP \fBgetAllEntities\fP ()"
.br
.ti -1c
.RI "std::vector< \fBAntEntityPtr\fP > \fBgetAllEntitiesV\fP ()"
.br
.ti -1c
.RI "std::vector< \fBAntEntityPtr\fP > \fBgetEntities\fP (const \fBAGString\fP &pName)"
.br
.ti -1c
.RI "\fBAntEntity\fP * \fBgetEntity\fP (const \fBMesh\fP &pMesh)"
.br
.ti -1c
.RI "\fBAntEntity\fP * \fBgetEntity\fP (const \fBAnimMesh\fP &pMesh)"
.br
.ti -1c
.RI "\fBAntEntity\fP * \fBgetEntity\fP (int id) const "
.br
.ti -1c
.RI "\fBAntEntity\fP * \fBgetByName\fP (const \fBAGString\fP &pName)"
.br
.ti -1c
.RI "\fBAntEntity\fP * \fBgetNext\fP (\fBAntEntity\fP *me, const \fBAGString\fP &pType, size_t atLeast=0)"
.br
.ti -1c
.RI "std::vector< \fBAntEntityPtr\fP > \fBgetNextList\fP (\fBAntEntity\fP *me, const \fBAGString\fP &pType, size_t atLeast=0)"
.br
.ti -1c
.RI "virtual \fBAntEntity\fP * \fBloadEntity\fP (const \fBNode\fP &node)"
.br
.ti -1c
.RI "void \fBsaveXML\fP (\fBNode\fP &node) const "
.br
.ti -1c
.RI "void \fBloadXML\fP (const \fBNode\fP &node)"
.br
.ti -1c
.RI "void \fBsaveMap\fP (const \fBAGFilename\fP &pFilename)"
.br
.ti -1c
.RI "virtual void \fBloadMap\fP (const \fBAGFilename\fP &pFilename)"
.br
.ti -1c
.RI "virtual void \fBloadMapFromMemory\fP (const \fBAGData\fP &Memory)"
.br
.ti -1c
.RI "void \fBmove\fP (float pTime)"
.br
.ti -1c
.RI "\fBAGVector3\fP \fBgetPos\fP (const \fBAGVector2\fP &pPos) const "
.br
.ti -1c
.RI "virtual void \fBmark\fP ()"
.br
.RI "\fIoverride this function to mark your children \fP"
.ti -1c
.RI "virtual void \fBmapChanged\fP ()"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "typedef std::list<\fBAntEntity\fP*> \fBAntMap::EntityList\fP"
.PP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AntMap::AntMap (\fBScene\fP * pScene, int w, int h)"
.PP
.SS "AntMap::~AntMap ()"
.PP
.SH "Member Function Documentation"
.PP 
.SS "void AntMap::clear ()\fC [virtual]\fP"
.PP
Reimplemented from \fBAGRubyObject\fP.
.SS "\fBAntMap::EntityList\fP AntMap::getAllEntities ()"
.PP
.SS "std::vector< \fBAntEntityPtr\fP > AntMap::getAllEntitiesV ()"
.PP
.SS "\fBAntEntity\fP * AntMap::getByName (const \fBAGString\fP & pName)"
.PP
.SS "std::vector< \fBAntEntityPtr\fP > AntMap::getEntities (const \fBAGString\fP & pName)"
.PP
.SS "\fBAntMap::EntityList\fP AntMap::getEntities (const \fBAGRect2\fP & r)"
.PP
.SS "\fBAntEntity\fP * AntMap::getEntity (int id) const"
.PP
.SS "\fBAntEntity\fP * AntMap::getEntity (const \fBAnimMesh\fP & pMesh)"
.PP
.SS "\fBAntEntity\fP * AntMap::getEntity (const \fBMesh\fP & pMesh)"
.PP
.SS "int AntMap::getNewID ()"
.PP
.SS "\fBAntEntity\fP * AntMap::getNext (\fBAntEntity\fP * me, const \fBAGString\fP & pType, size_t atLeast = \fC0\fP)"
.PP
.SS "std::vector< \fBAntEntityPtr\fP > AntMap::getNextList (\fBAntEntity\fP * me, const \fBAGString\fP & pType, size_t atLeast = \fC0\fP)"
.PP
.SS "\fBAGVector3\fP AntMap::getPos (const \fBAGVector2\fP & pPos) const"
.PP
.SS "void AntMap::insertEntity (\fBAntEntity\fP * e)\fC [virtual]\fP"
.PP
.SS "\fBAntEntity\fP * AntMap::loadEntity (const \fBNode\fP & node)\fC [virtual]\fP"
.PP
.SS "void AntMap::loadMap (const \fBAGFilename\fP & pFilename)\fC [virtual]\fP"
.PP
.SS "void AntMap::loadMapFromMemory (const \fBAGData\fP & Memory)\fC [virtual]\fP"
.PP
.SS "void AntMap::loadXML (const \fBNode\fP & node)\fC [virtual]\fP"
.PP
Reimplemented from \fBHeightMap\fP.
.SS "void AntMap::mapChanged ()\fC [virtual]\fP"
.PP
Reimplemented from \fBHeightMap\fP.
.SS "void AntMap::mark ()\fC [virtual]\fP"
.PP
override this function to mark your children 
.PP
Reimplemented from \fBAGRubyObject\fP.
.SS "void AntMap::move (float pTime)"
.PP
.SS "void AntMap::newMap (int w, int h)\fC [virtual]\fP"
.PP
Reimplemented from \fBHeightMap\fP.
.SS "void AntMap::removeEntity (\fBAntEntity\fP * p)\fC [virtual]\fP"
.PP
.SS "void AntMap::saveMap (const \fBAGFilename\fP & pFilename)"
.PP
.SS "void AntMap::saveXML (\fBNode\fP & node) const\fC [virtual]\fP"
.PP
Reimplemented from \fBHeightMap\fP.
.SS "void AntMap::useID (int id)"
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
