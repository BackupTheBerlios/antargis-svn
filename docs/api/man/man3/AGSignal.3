.TH "AGSignal" 3 "27 Oct 2006" "Version 0.1.9" "Antargis" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AGSignal \- 
.SH SYNOPSIS
.br
.PP
\fC#include <ag_messageobject.h>\fP
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAGSignal\fP ()"
.br
.ti -1c
.RI "\fBAGSignal\fP (\fBAGMessageObject\fP *pCaller)"
.br
.ti -1c
.RI "\fBAGSignal\fP (\fBAGMessageObject\fP *pCaller, const \fBAGString\fP &pName)"
.br
.ti -1c
.RI "virtual \fB~AGSignal\fP ()"
.br
.ti -1c
.RI "void \fBconnect\fP (\fBAGListener\fP &pListener)"
.br
.ti -1c
.RI "void \fBdisconnect\fP (\fBAGListener\fP &pListener)"
.br
.ti -1c
.RI "void \fBconnect\fP (\fBAGCPPListener\fP *pListener)"
.br
.ti -1c
.RI "void \fBdisconnect\fP (\fBAGCPPListener\fP *pListener)"
.br
.ti -1c
.RI "bool \fBsignal\fP (\fBAGEvent\fP *m)"
.br
.ti -1c
.RI "bool \fBoperator()\fP (\fBAGEvent\fP *m)"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBAGSignal\fP is a placeholder-class for a function which calls all the Slots, which are connected to this signal. For instance a button named 'close' holds a sigClick signal and a dialog box has a slotClose. You call sigClick(event) in the button and the connected slot is automatically called. 
.PP
\fBSee also:\fP
.RS 4
\fBconnect()\fP 
.RE
.PP

.PP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AGSignal::AGSignal ()"
.PP
.SS "AGSignal::AGSignal (\fBAGMessageObject\fP * pCaller)"
.PP
.SS "AGSignal::AGSignal (\fBAGMessageObject\fP * pCaller, const \fBAGString\fP & pName)"
.PP
.SS "AGSignal::~AGSignal ()\fC [virtual]\fP"
.PP
.SH "Member Function Documentation"
.PP 
.SS "void AGSignal::connect (\fBAGCPPListener\fP * pListener)"
.PP
When connecting a signal to a slot you call this function. For instance you have a class: 
.PP
.nf

   class A
   {
     public:
     \fBAGSignal\fP sigSomething;
   };
   class B
   {
     public:
     bool eventSomething( AGEvent *e);
   };
   A a;
   B b;
you can connect them like this;
   A.sigSomething.connect(slot(&b,&B::eventSomething));
   
.fi
.PP
 
.SS "void AGSignal::connect (\fBAGListener\fP & pListener)"
.PP
This is the simple connect version. You have to override signal(.) in \fBAGListener\fP and provide a reasonable functionality there. For simple usage use \fBAGSignal::connect( AGCPPListener *pListener)\fP; 
.SS "void AGSignal::disconnect (\fBAGCPPListener\fP * pListener)"
.PP
.SS "void AGSignal::disconnect (\fBAGListener\fP & pListener)"
.PP
.SS "bool AGSignal::operator() (\fBAGEvent\fP * m)"
.PP
.SS "bool AGSignal::signal (\fBAGEvent\fP * m)"
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Antargis from the source code.
